{"version":3,"file":"static/js/136.eccabd5192.chunk.js","mappings":"iJAUA,MCVoB,CAClBA,SAAU,wB,qJCKZC,EAAAA,EAAAA,SAAAA,QAAyB,IACzBA,EAAAA,EAAAA,SAAAA,QAAyBC,EAAAA,EAAAA,SAIzBD,EAAAA,EAAAA,aAAAA,QAAAA,KACE,SAACE,GAKC,OAJAA,EAAOC,KAAOC,KAAKC,UAAUH,EAAOC,MACpCD,EAAQI,QAAU,CAChB,eAAgB,oDAEXJ,CACT,IACA,SAAAK,GACE,OAAOC,QAAQC,OAAOF,EACxB,IAMFP,EAAAA,EAAAA,aAAAA,SAAAA,KACE,SAAAU,GAIE,OAH8B,IAA1BA,EAASP,KAAKQ,SAChBC,EAAAA,GAAAA,MAAc,MAETF,CACT,IACA,SAAAH,GAGEK,EAAAA,GAAAA,MAAc,QAADC,OAASN,GACxB,IA0Fa,SAASO,EAAKC,EAAYC,EAAaC,GAEpD,OAAO,IAAIT,SAAQ,SAACU,EAAST,GAC3B,OAAQM,GACN,IAAK,OArFQ,SAACC,GAA8B,IAAjBG,EAAMC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EACzC,OAAO,IAAIZ,SAAQ,SAACU,EAAST,GAC3BT,EAAAA,EAAAA,IACOgB,EAAK,CACRG,OAAQA,IAETI,MAAK,SAAAb,GACJc,EAAQR,EAAKG,EAAQT,EAASP,MAC9Be,EAAQR,EAASP,KACnB,IACCsB,OAAM,SAAAlB,GACLE,EAAOF,EACT,GACJ,GACF,EAyEQmB,CAAIV,EAAKC,GACNM,MAAK,SAAUb,GACdQ,EAAQR,EACV,IACCe,OAAM,SAAUlB,GAEfE,EAAOF,EACT,IACF,MACF,IAAK,QAzES,SAACS,EAAab,GAChC,OAAO,IAAIK,SAAQ,SAACU,EAAST,GAC3BT,EAAAA,EAAAA,KAAWgB,EAAKb,GAAMoB,MACpB,SAAAb,GAEEQ,EAAQR,EAASP,KACnB,IACA,SAAAwB,GACElB,EAAOkB,EACT,GAEJ,GACF,EA8DQC,CAAKZ,EAAKC,GACPM,MAAK,SAAUb,GACdQ,EAAQR,EACV,IACCe,OAAM,SAAUlB,GAEfE,EAAOF,EACT,IAKR,GACF,CAGA,I,EAyDMiB,EAAU,SAACR,EAAaG,EAAYhB,GAEpCA,EAAK0B,IAEX,ECxNaC,EAAU,SAACC,GACtB,OAAO,IAAIvB,SAAQ,SAACU,EAAST,GAC3BK,EAAK,MAAO,gBAAiBiB,GAAIR,MAC/B,SAAAS,GACEd,EAAQc,EACV,IACA,SAAAzB,GACEE,EAAOF,EACT,GAEJ,GACF,E,oBCVM0B,EAAMC,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,6BAGP,SAASC,IACtB,IAAAC,GAAwBC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7BnC,EAAIqC,EAAA,GAAEE,EAAOF,EAAA,GACpB,OACEG,EAAAA,EAAAA,MAACV,EAAG,CAAAW,SAAA,EACFC,EAAAA,EAAAA,KAAA,OAAAD,SAAK,UAELC,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CAACC,GAAI,IAAIH,SAAC,WACfC,EAAAA,EAAAA,KAAAG,EAAAA,GAAA,CAAQC,QAAS,kBAAMrC,EAAAA,GAAAA,QAAgB,SAAS,EAACgC,SAAC,UAClDC,EAAAA,EAAAA,KAAAG,EAAAA,GAAA,CACEC,QAAS,WACPnB,EAAQ,CAAEC,GAAI,IACXR,MAAK,SAACS,GACLU,EAAQV,EAAIkB,MAEZtC,EAAAA,GAAAA,QAAgB,kBAClB,IACCa,OAAM,SAAAE,GAEP,GACJ,EAAEiB,SACH,UAGDC,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,MAAAD,SAAKzC,MAGX,C","sources":["config/index.ts","config/config_prod.ts","http/http.ts","http/api.ts","pages/Main/Main.tsx"],"sourcesContent":["import config_dev from './config_dev'\nimport config_prod from './config_prod'\n\nlet CONFIG = config_dev\nif (process.env.NODE_ENV === 'development') {\n  CONFIG = config_dev\n}\nif (process.env.NODE_ENV === 'production') {\n  CONFIG = config_prod\n}\nexport default CONFIG\n","const config_prod = {\n  BASE_URL: 'http://localhost:3001',\n}\n\nexport default config_prod\n","/**\n * 网络请求配置\n */\nimport axios from 'axios'\nimport { message } from 'antd'\nimport CONFIG from '../config/index'\naxios.defaults.timeout = 1000\naxios.defaults.baseURL = CONFIG.BASE_URL\n/**\n * http request 拦截器\n */\naxios.interceptors.request.use(\n  (config: any) => {\n    config.data = JSON.stringify(config.data)\n    config!.headers = {\n      'Content-Type': 'application/x-www-form-urlencoded; charset=utf-8',\n    }\n    return config\n  },\n  error => {\n    return Promise.reject(error)\n  }\n)\n\n/**\n * http response 拦截器\n */\naxios.interceptors.response.use(\n  response => {\n    if (response.data.errCode === 2) {\n      message.error('过期')\n    }\n    return response\n  },\n  error => {\n    console.log('error', error)\n\n    message.error(`请求出错：${error}`)\n  }\n)\n\n/**\n * 封装get方法\n * @param url  请求url\n * @param params  请求参数\n * @returns {Promise}\n */\nexport const get = (url: string, params = {}) => {\n  return new Promise((resolve, reject) => {\n    axios\n      .get(url, {\n        params: params,\n      })\n      .then(response => {\n        landing(url, params, response.data)\n        resolve(response.data)\n      })\n      .catch(error => {\n        reject(error)\n      })\n  })\n}\n\n/**\n * 封装post请求\n * @param url\n * @param data\n * @returns {Promise}\n */\n\nexport const post = (url: string, data: any) => {\n  return new Promise((resolve, reject) => {\n    axios.post(url, data).then(\n      response => {\n        //关闭进度条\n        resolve(response.data)\n      },\n      err => {\n        reject(err)\n      }\n    )\n  })\n}\n\n/**\n * 封装patch请求\n * @param url\n * @param data\n * @returns {Promise}\n */\nexport const patch = (url: string, data = {}) => {\n  return new Promise((resolve, reject) => {\n    axios.patch(url, data).then(\n      response => {\n        resolve(response.data)\n      },\n      err => {\n        msg(err)\n        reject(err)\n      }\n    )\n  })\n}\n\n/**\n * 封装put请求\n * @param url\n * @param data\n * @returns {Promise}\n */\n\nexport const put = (url: string, data = {}) => {\n  return new Promise((resolve, reject) => {\n    axios.put(url, data).then(\n      response => {\n        resolve(response.data)\n      },\n      err => {\n        msg(err)\n        reject(err)\n      }\n    )\n  })\n}\n\n//统一接口处理，返回数据\n\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport default function http(fecth: any, url: string, param: {} | undefined) {\n  // const _data = ''\n  return new Promise((resolve, reject) => {\n    switch (fecth) {\n      case 'get':\n        console.log('begin a get request,and url:', url)\n        get(url, param)\n          .then(function (response) {\n            resolve(response)\n          })\n          .catch(function (error) {\n            console.log('get request GET failed.', error)\n            reject(error)\n          })\n        break\n      case 'post':\n        post(url, param)\n          .then(function (response) {\n            resolve(response)\n          })\n          .catch(function (error) {\n            console.log('get request POST failed.', error)\n            reject(error)\n          })\n        break\n      default:\n        break\n    }\n  })\n}\n\n//失败提示\nconst msg = (err: { response: { status: any; data: { error: { details: any } } } }) => {\n  if (err && err.response) {\n    switch (err.response.status) {\n      case 400:\n        message.error(err.response.data.error.details)\n        break\n      case 401:\n        message.error('未授权，请登录')\n        break\n\n      case 403:\n        message.error('拒绝访问')\n        break\n\n      case 404:\n        message.error('请求地址出错')\n        break\n\n      case 408:\n        message.error('请求超时')\n        break\n\n      case 500:\n        message.error('服务器内部错误')\n        break\n\n      case 501:\n        message.error('服务未实现')\n        break\n\n      case 502:\n        message.error('网关错误')\n        break\n\n      case 503:\n        message.error('服务不可用')\n        break\n\n      case 504:\n        message.error('网关超时')\n        break\n\n      case 505:\n        message.error('HTTP版本不受支持')\n        break\n      default:\n    }\n  }\n}\n\n/**\n * 查看返回的数据\n * @param url\n * @param params\n * @param data\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\nconst landing = (url: string, params: {}, data: { code: number }) => {\n  // eslint-disable-next-line no-empty\n  if (data.code === -1) {\n  }\n}\n","import http from './http'\n\n/**\n * 获取首页列表\n */\nexport const getData = (id: object) => {\n  return new Promise((resolve, reject) => {\n    http('get', '/article/info', id).then(\n      res => {\n        resolve(res)\n      },\n      error => {\n        reject(error)\n      }\n    )\n  })\n}\n","import { Button, message } from 'antd'\nimport { useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { getData } from '../../http/api'\nimport styled from 'styled-components'\n\nconst Box = styled.div`\n  color: #ffffff;\n`\nexport default function Main() {\n  const [data, setData] = useState('')\n  return (\n    <Box>\n      <div>Main</div>\n\n      <Link to={'/'}>black</Link>\n      <Button onClick={() => message.success('全局提示信息')}>Test</Button>\n      <Button\n        onClick={() => {\n          getData({ id: 1 })\n            .then((res: any) => {\n              setData(res.name)\n              console.log(res)\n              message.success('getDataSuccess!')\n            })\n            .catch(err => {\n              console.log(err)\n            })\n        }}\n      >\n        Http\n      </Button>\n      <br />\n      <h3>{data}</h3>\n    </Box>\n  )\n}\n"],"names":["BASE_URL","axios","CONFIG","config","data","JSON","stringify","headers","error","Promise","reject","response","errCode","_message","concat","http","fecth","url","param","resolve","params","arguments","length","undefined","then","landing","catch","get","err","post","code","getData","id","res","Box","styled","_templateObject","_taggedTemplateLiteral","Main","_useState","useState","_useState2","_slicedToArray","setData","_jsxs","children","_jsx","Link","to","_Button","onClick","name"],"sourceRoot":""}